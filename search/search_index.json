{"config":{"lang":["pt"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Laborat\u00f3rio Pr\u00e1tico","text":"<p>Integrantes: Gabriel Gomes Galikosky; Mateus Lopes Albano; Paulo Jos\u00e9 de Oliveira Rolinski; Ricardo Andr\u00e9 da Silva.</p>"},{"location":"#implementando-e-gerenciando-conteineres-com-podman","title":"Implementando e Gerenciando Cont\u00eaineres com Podman","text":"<p>Este guia foi desenvolvido para ajudar voc\u00ea a entender e utilizar o Podman, uma alternativa moderna e segura para gerenciamento de containers.</p>"},{"location":"#o-que-e-o-podman","title":"O que \u00e9 o Podman?","text":"<p>Podman (Pod Manager) \u00e9 uma ferramenta para desenvolver, gerenciar e executar containers em Linux. \u00c9 uma alternativa ao Docker que n\u00e3o requer um daemon em execu\u00e7\u00e3o e opera com privil\u00e9gios de root reduzidos.</p> <p>Neste laborat\u00f3rio, vamos explorar:</p> <ul> <li>Instala\u00e7\u00e3o do Podman em diferentes sistemas</li> <li>Execu\u00e7\u00e3o de cont\u00eaineres b\u00e1sicos e avan\u00e7ados</li> <li>Cria\u00e7\u00e3o e gerenciamento de pods</li> <li>Integra\u00e7\u00e3o com systemd para cont\u00eaineres persistentes</li> <li>Compara\u00e7\u00f5es pr\u00e1ticas com Docker</li> <li>Recursos exclusivos como cont\u00eaineres rootless</li> </ul>"},{"location":"#por-que-usar-podman","title":"Por que usar Podman?","text":"<ul> <li>Daemonless: N\u00e3o requer um daemon em execu\u00e7\u00e3o</li> <li>Seguran\u00e7a: Executa containers com privil\u00e9gios reduzidos</li> <li>Compatibilidade: Compat\u00edvel com Docker CLI e containers OCI</li> <li>Pods: Suporte nativo a pods, similar ao Kubernetes</li> </ul>"},{"location":"#como-usar-este-guia","title":"Como usar este guia","text":"<p>Este guia est\u00e1 organizado em se\u00e7\u00f5es progressivas, desde conceitos b\u00e1sicos at\u00e9 t\u00f3picos avan\u00e7ados. Recomendamos seguir a ordem:</p> <ol> <li>Instala\u00e7\u00e3o</li> <li>Fundamentos</li> <li>Redes</li> <li>Volumes</li> <li>T\u00f3picos Avan\u00e7ados</li> </ol>"},{"location":"#pre-requisitos","title":"Pr\u00e9-requisitos","text":""},{"location":"#sistema-operacional","title":"Sistema operacional","text":"<ul> <li>Linux (recomendado: Fedora, RHEL, CentOS, Ubuntu 20.04+, Debian 10+)</li> <li>Para usu\u00e1rios Windows: WSL2 com distribui\u00e7\u00e3o Linux compat\u00edvel</li> <li>Para usu\u00e1rios macOS: Podman Machine (virtualiza\u00e7\u00e3o)</li> </ul>"},{"location":"#dependencias","title":"Depend\u00eancias","text":"<ul> <li>Kernel Linux 3.8+ (recomendado 4.11+ para funcionalidades completas)</li> <li>Suporte a namespaces de usu\u00e1rio ativado no kernel</li> <li>Suporte a cgroups v2 para melhores recursos de gerenciamento</li> <li>slirp4netns (para redes rootless)</li> <li>fuse-overlayfs (para storage rootless)</li> </ul>"},{"location":"#hardware-recomendado","title":"Hardware recomendado","text":"<ul> <li>CPU: 2+ cores</li> <li>RAM: 2GB+ de mem\u00f3ria dispon\u00edvel</li> <li>Disco: 10GB+ de espa\u00e7o livre</li> <li>Conex\u00e3o de internet para downloads e atualiza\u00e7\u00f5es</li> <li>Acesso root ou sudo para instala\u00e7\u00e3o e configura\u00e7\u00e3o</li> <li>Editor de texto - nano, por exemplo - para edi\u00e7\u00e3o de arquivos</li> </ul>"},{"location":"advanced/security/","title":"Seguran\u00e7a no Podman","text":"<p>A seguran\u00e7a no Podman se baseia em v\u00e1rios componentes do kernel Linux e em sua arquitetura sem daemon, que reduz a superf\u00edcie de ataque e proporciona maior isolamento entre os cont\u00eaineres e o sistema host.</p>"},{"location":"advanced/security/#arquitetura-de-seguranca","title":"Arquitetura de Seguran\u00e7a","text":""},{"location":"advanced/security/#design-sem-daemon","title":"Design Sem Daemon","text":"<p>Ao contr\u00e1rio do Docker, o Podman n\u00e3o depende de um daemon centralizado em execu\u00e7\u00e3o com privil\u00e9gios de root. Isso significa:</p> <ul> <li>N\u00e3o h\u00e1 um \u00fanico ponto de falha que possa ser explorado para comprometer todo o sistema</li> <li>Cada usu\u00e1rio executa seus pr\u00f3prios cont\u00eaineres isolados</li> <li>Redu\u00e7\u00e3o significativa da superf\u00edcie de ataque</li> <li>Sem eleva\u00e7\u00e3o de privil\u00e9gios atrav\u00e9s de soquetes do sistema</li> </ul>"},{"location":"advanced/security/#modelo-de-permissoes","title":"Modelo de Permiss\u00f5es","text":"<p>O Podman utiliza um modelo de permiss\u00f5es baseado no usu\u00e1rio:</p> <pre><code># Execu\u00e7\u00e3o como usu\u00e1rio normal (rootless)\npodman run -d nginx\n\n# Execu\u00e7\u00e3o como root (quando necess\u00e1rio)\nsudo podman run -d --privileged nginx\n</code></pre> <p>Essa separa\u00e7\u00e3o de privil\u00e9gios fortalece a seguran\u00e7a, permitindo opera\u00e7\u00f5es regulares sem acesso root.</p>"},{"location":"advanced/security/#execucao-rootless","title":"Execu\u00e7\u00e3o Rootless","text":""},{"location":"advanced/security/#o-que-e-execucao-rootless","title":"O que \u00e9 Execu\u00e7\u00e3o Rootless?","text":"<p>A execu\u00e7\u00e3o rootless permite que cont\u00eaineres sejam executados por usu\u00e1rios sem privil\u00e9gios, oferecendo v\u00e1rias vantagens de seguran\u00e7a:</p> <ul> <li>Mitiga\u00e7\u00e3o de vulnerabilidades de escala\u00e7\u00e3o de privil\u00e9gios</li> <li>Isolamento entre diferentes usu\u00e1rios do sistema</li> <li>Menor impacto em caso de comprometimento de um cont\u00eainer</li> </ul>"},{"location":"advanced/security/#configurando-podman-rootless","title":"Configurando Podman Rootless","text":"<p>Para habilitar e utilizar o modo rootless:</p> <pre><code># Verificar configura\u00e7\u00e3o do sistema\npodman system info\n\n# Configurar mapeamento de usu\u00e1rio (se necess\u00e1rio)\nsudo usermod --add-subuids 100000-165535 $(whoami)\nsudo usermod --add-subgids 100000-165535 $(whoami)\n\n# Reiniciar o servi\u00e7o de usu\u00e1rio (ou fazer logout/login)\nsystemctl --user restart podman.socket\n</code></pre>"},{"location":"advanced/security/#limitacoes-do-modo-rootless","title":"Limita\u00e7\u00f5es do Modo Rootless","text":"<p>\u00c9 importante entender algumas limita\u00e7\u00f5es:</p> <ul> <li>Portas abaixo de 1024 n\u00e3o podem ser usadas diretamente (requer configura\u00e7\u00e3o adicional)</li> <li>Alguns recursos de rede podem exigir configura\u00e7\u00f5es espec\u00edficas</li> <li>Algumas opera\u00e7\u00f5es espec\u00edficas ainda podem exigir permiss\u00f5es de root</li> </ul>"},{"location":"advanced/security/#namespaces-e-isolamento","title":"Namespaces e Isolamento","text":"<p>O Podman utiliza namespaces do kernel Linux para fornecer isolamento entre cont\u00eaineres:</p>"},{"location":"advanced/security/#namespaces-principais","title":"Namespaces Principais","text":"<ul> <li>PID Namespace: Isola os processos em execu\u00e7\u00e3o no cont\u00eainer</li> <li>Network Namespace: Isola a pilha de rede (interfaces, rotas, firewall)</li> <li>Mount Namespace: Isola os pontos de montagem do sistema de arquivos</li> <li>UTS Namespace: Isola hostname e dom\u00ednio</li> <li>IPC Namespace: Isola comunica\u00e7\u00e3o entre processos</li> <li>User Namespace: Mapeia UIDs/GIDs entre cont\u00eainer e host</li> </ul>"},{"location":"advanced/security/#configurando-isolamento-adicional","title":"Configurando Isolamento Adicional","text":"<pre><code># Isolar o namespace PID do host\npodman run --pid=host nginx\n\n# Utilizar namespace de usu\u00e1rio separado\npodman run --userns=keep-id nginx\n\n# Executar cont\u00eainer com todos os namespaces isolados\npodman run --pid=private --ipc=private --net=private nginx\n</code></pre>"},{"location":"advanced/security/#controles-de-recursos","title":"Controles de Recursos","text":""},{"location":"advanced/security/#limites-de-cpu-e-memoria","title":"Limites de CPU e Mem\u00f3ria","text":"<p>O Podman permite restringir recursos dispon\u00edveis para cont\u00eaineres, limitando o impacto potencial de ataques de nega\u00e7\u00e3o de servi\u00e7o:</p> <pre><code># Limitar CPU\npodman run --cpus=1.5 --cpu-shares=512 nginx\n\n# Limitar mem\u00f3ria\npodman run --memory=512m --memory-swap=1g nginx\n\n# Limitar E/S de disco\npodman run --device-read-bps=/dev/sda:10mb --device-write-bps=/dev/sda:10mb nginx\n</code></pre>"},{"location":"advanced/security/#configurando-cgroups","title":"Configurando cgroups","text":"<p>O Podman utiliza cgroups (control groups) para implementar controles de recursos:</p> <pre><code># Especificar o controlador cgroup v2\npodman run --cgroup-manager=systemd nginx\n\n# Definir limite de pids (processos)\npodman run --pids-limit=100 nginx\n</code></pre>"},{"location":"advanced/security/#selinux-e-apparmor","title":"SELinux e AppArmor","text":""},{"location":"advanced/security/#selinux-com-podman","title":"SELinux com Podman","text":"<p>O Podman integra-se bem com o SELinux, proporcionando controle de acesso mandat\u00f3rio:</p> <pre><code># Executar com contexto de SELinux padr\u00e3o\npodman run -v /host/path:/container/path:Z nginx\n\n# Compartilhar volume entre cont\u00eaineres (shared label)\npodman run -v /host/path:/container/path:z nginx\n\n# Verificar contexto SELinux em volumes\npodman inspect --format '{{.Mounts}}' container_id\n</code></pre> <p>O modificador <code>:Z</code> aplica o contexto SELinux apropriado ao volume, enquanto <code>:z</code> aplica um r\u00f3tulo compartilhado.</p>"},{"location":"advanced/security/#apparmor-com-podman","title":"AppArmor com Podman","text":"<p>Em sistemas com AppArmor, o Podman pode utilizar perfis para restringir o acesso:</p> <pre><code># Executar com perfil AppArmor espec\u00edfico\npodman run --security-opt apparmor=custom-profile nginx\n\n# Desabilitar AppArmor para um cont\u00eainer (n\u00e3o recomendado)\npodman run --security-opt apparmor=unconfined nginx\n</code></pre>"},{"location":"advanced/security/#capabilities-do-linux","title":"Capabilities do Linux","text":""},{"location":"advanced/security/#gerenciando-capabilities","title":"Gerenciando Capabilities","text":"<p>As capabilities do Linux permitem um controle fino sobre privil\u00e9gios, eliminando a necessidade do modo privilegiado completo:</p> <pre><code># Adicionar capabilities espec\u00edficas\npodman run --cap-add=NET_ADMIN,SYS_TIME nginx\n\n# Remover capabilities espec\u00edficas\npodman run --cap-drop=ALL --cap-add=CHOWN nginx\n\n# Listar capabilities padr\u00e3o\npodman run --rm docker.io/alpine grep Cap /proc/self/status\n</code></pre>"},{"location":"advanced/security/#capabilities-importantes","title":"Capabilities Importantes","text":"<ul> <li><code>NET_ADMIN</code>: Configura\u00e7\u00e3o de rede</li> <li><code>SYS_ADMIN</code>: Opera\u00e7\u00f5es administrativas do sistema (evitar quando poss\u00edvel)</li> <li><code>SYS_PTRACE</code>: Depura\u00e7\u00e3o e rastreamento de processos</li> <li><code>MKNOD</code>: Criar dispositivos especiais</li> <li><code>AUDIT_WRITE</code>: Escrever registros de auditoria</li> </ul>"},{"location":"advanced/security/#modo-privilegiado","title":"Modo Privilegiado","text":"<p>O modo privilegiado deve ser evitado sempre que poss\u00edvel, pois concede acesso quase completo ao sistema host:</p> <pre><code># Modo privilegiado (use com extrema cautela)\npodman run --privileged nginx\n\n# Alternativa mais segura: adicionar apenas capabilities necess\u00e1rias\npodman run --cap-add=NET_ADMIN --device=/dev/net/tun nginx\n</code></pre>"},{"location":"advanced/security/#imagens-e-vulnerabilidades","title":"Imagens e Vulnerabilidades","text":""},{"location":"advanced/security/#praticas-seguras-para-imagens","title":"Pr\u00e1ticas Seguras para Imagens","text":"<p>A seguran\u00e7a come\u00e7a com imagens confi\u00e1veis e bem mantidas:</p> <pre><code># Verificar a origem da imagem\npodman pull docker.io/library/nginx\n\n# Inspecionar a imagem antes de us\u00e1-la\npodman inspect nginx:latest\n\n# Usar imagens com tags espec\u00edficas, evitando \"latest\"\npodman pull nginx:1.21.6-alpine\n</code></pre>"},{"location":"advanced/security/#escaneamento-de-vulnerabilidades","title":"Escaneamento de Vulnerabilidades","text":"<p>O ecossistema do Podman oferece ferramentas para escanear vulnerabilidades:</p> <pre><code># Usando Trivy para escanear imagens\ntrivy image nginx:latest\n\n# Verificando imagem com Clair (via skopeo)\nskopeo inspect --format \"{{.Name}}\" docker://nginx:latest | xargs -I {} clair-scanner {}\n</code></pre>"},{"location":"advanced/security/#construcao-segura-de-imagens","title":"Constru\u00e7\u00e3o Segura de Imagens","text":"<p>Construa imagens com foco em seguran\u00e7a usando o Buildah (integrado ao Podman):</p> <pre><code># Construir com usu\u00e1rio n\u00e3o-root\npodman build --build-arg USER=appuser -t minha-app:secure .\n\n# Conte\u00fado do Dockerfile\nFROM alpine:latest\nRUN adduser -D appuser\nUSER appuser\nCOPY --chown=appuser:appuser app /app\nWORKDIR /app\nENTRYPOINT [\"./app\"]\n</code></pre>"},{"location":"advanced/security/#secrets-management","title":"Secrets Management","text":""},{"location":"advanced/security/#gerenciando-segredos","title":"Gerenciando Segredos","text":"<p>O Podman oferece v\u00e1rias formas de gerenciar segredos em cont\u00eaineres:</p> <pre><code># Usando vari\u00e1veis de ambiente (menos seguro)\npodman run -e \"API_KEY=segredo\" nginx\n\n# Usando arquivos montados (mais seguro)\npodman run -v /path/to/secret:/run/secrets:ro,Z nginx\n\n# Usando secret mounts (mais recente)\npodman secret create db_password password.txt\npodman run --secret db_password nginx\n</code></pre>"},{"location":"advanced/security/#melhores-praticas-para-segredos","title":"Melhores Pr\u00e1ticas para Segredos","text":"<ul> <li>Nunca armazene segredos nas imagens ou Dockerfiles</li> <li>Use montagens de somente leitura para arquivos de configura\u00e7\u00e3o sens\u00edveis</li> <li>Evite passar segredos via vari\u00e1veis de ambiente quando poss\u00edvel</li> <li>Considere ferramentas externas como HashiCorp Vault ou AWS Secrets Manager</li> </ul>"},{"location":"advanced/security/#redes-e-seguranca","title":"Redes e Seguran\u00e7a","text":""},{"location":"advanced/security/#isolamento-de-rede","title":"Isolamento de Rede","text":"<p>O Podman permite isolar redes entre cont\u00eaineres:</p> <pre><code># Criar rede isolada\npodman network create app-network\n\n# Executar cont\u00eainer na rede isolada\npodman run --network=app-network --name=db postgres\n\n# Conectar cont\u00eainer a m\u00faltiplas redes\npodman network connect another-network db\n</code></pre>"},{"location":"advanced/security/#regras-de-firewall","title":"Regras de Firewall","text":"<p>Controle cuidadosamente a exposi\u00e7\u00e3o de portas:</p> <pre><code># Expor porta apenas em localhost\npodman run -p 127.0.0.1:8080:80 nginx\n\n# Evitar expor portas desnecess\u00e1rias\npodman run --network=app-network --expose 5432 postgres\n</code></pre>"},{"location":"advanced/security/#dns-e-resolucao-de-nomes","title":"DNS e Resolu\u00e7\u00e3o de Nomes","text":"<p>Configure DNS de forma segura:</p> <pre><code># Definir servidores DNS espec\u00edficos\npodman run --dns=1.1.1.1 nginx\n\n# Adicionar entrada de hosts personalizada\npodman run --add-host=myservice:10.10.10.10 nginx\n</code></pre>"},{"location":"advanced/security/#melhores-praticas","title":"Melhores Pr\u00e1ticas","text":""},{"location":"advanced/security/#principio-de-privilegio-minimo","title":"Princ\u00edpio de Privil\u00e9gio M\u00ednimo","text":"<ul> <li>Execute sempre como usu\u00e1rio n\u00e3o-root dentro do cont\u00eainer</li> <li>Evite o modo privilegiado</li> <li>Adicione apenas as capabilities estritamente necess\u00e1rias</li> <li>Use modo somente leitura para sistemas de arquivos quando poss\u00edvel</li> </ul> <pre><code># Exemplo de cont\u00eainer com privil\u00e9gio m\u00ednimo\npodman run --read-only \\\n  --cap-drop=ALL \\\n  --cap-add=NET_BIND_SERVICE \\\n  --user 1000:1000 \\\n  nginx\n</code></pre>"},{"location":"advanced/security/#hardening-de-conteineres","title":"Hardening de Cont\u00eaineres","text":"<pre><code># Sistema de arquivos somente leitura\npodman run --read-only nginx\n\n# Desabilitar escala\u00e7\u00f5es de privil\u00e9gio\npodman run --security-opt=no-new-privileges nginx\n\n# Usar seccomp para filtrar syscalls\npodman run --security-opt seccomp=/path/to/profile.json nginx\n</code></pre>"},{"location":"advanced/security/#monitoramento-e-auditoria","title":"Monitoramento e Auditoria","text":"<ul> <li>Configure logging adequado para todos os cont\u00eaineres</li> <li>Implemente ferramentas de monitoramento para detectar comportamentos an\u00f4malos</li> <li>Estabele\u00e7a pol\u00edticas de auditoria para revisar logs regularmente</li> </ul> <pre><code># Configurar logging personalizado\npodman run --log-driver=journald --log-opt=tag=webapp nginx\n</code></pre>"},{"location":"advanced/security/#seguranca-em-ambientes-de-producao","title":"Seguran\u00e7a em Ambientes de Produ\u00e7\u00e3o","text":""},{"location":"advanced/security/#configuracoes-recomendadas","title":"Configura\u00e7\u00f5es Recomendadas","text":"<p>Para ambientes de produ\u00e7\u00e3o, implemente estas configura\u00e7\u00f5es:</p> <pre><code># Cont\u00eainer com configura\u00e7\u00f5es de seguran\u00e7a para produ\u00e7\u00e3o\npodman run \\\n  --cap-drop=ALL \\\n  --cap-add=NET_BIND_SERVICE \\\n  --security-opt=no-new-privileges \\\n  --security-opt seccomp=/path/to/seccomp.json \\\n  --read-only \\\n  --tmpfs /tmp:rw,noexec,nosuid,size=50m \\\n  --user nobody \\\n  nginx\n</code></pre>"},{"location":"advanced/security/#atualizacoes-e-patches","title":"Atualiza\u00e7\u00f5es e Patches","text":"<ul> <li>Mantenha imagens atualizadas com patches de seguran\u00e7a</li> <li>Implemente uma estrat\u00e9gia de atualiza\u00e7\u00e3o regular</li> <li>Configure escaneamento autom\u00e1tico de vulnerabilidades</li> </ul> <pre><code># Atualizar imagens\npodman pull nginx:1.21-alpine\npodman image prune -a --filter \"until=24h\"\n</code></pre>"},{"location":"advanced/security/#comparacao-com-docker","title":"Compara\u00e7\u00e3o com Docker","text":""},{"location":"advanced/security/#vantagens-de-seguranca-do-podman","title":"Vantagens de Seguran\u00e7a do Podman","text":"<p>O Podman oferece vantagens distintas em compara\u00e7\u00e3o ao Docker:</p> <ol> <li>Arquitetura sem daemon: N\u00e3o requer processo privilegiado em execu\u00e7\u00e3o constante</li> <li>Suporte nativo a rootless: Projetado desde o in\u00edcio para opera\u00e7\u00e3o sem privil\u00e9gios</li> <li>Integra\u00e7\u00e3o com systemd: Melhor gerenciamento de ciclo de vida de cont\u00eaineres</li> <li>Fork/Exec em vez de cliente/servidor: Modelo de processo mais seguro</li> </ol>"},{"location":"advanced/security/#migracao-segura-do-docker-para-podman","title":"Migra\u00e7\u00e3o Segura do Docker para Podman","text":"<pre><code># Converter docker-compose para podman\npodman-compose -f docker-compose.yml up\n\n# Migrar cont\u00eainer Docker para Podman\ndocker inspect container &gt; container.json\npodman import container.json\n</code></pre>"},{"location":"advanced/security/#ferramentas-de-seguranca","title":"Ferramentas de Seguran\u00e7a","text":""},{"location":"advanced/security/#ferramentas-de-avaliacao","title":"Ferramentas de Avalia\u00e7\u00e3o","text":"<ul> <li>OpenSCAP: Framework de conformidade e seguran\u00e7a</li> <li>Clair: An\u00e1lise est\u00e1tica de vulnerabilidades para cont\u00eaineres</li> <li>Trivy: Scanner de vulnerabilidades para imagens de cont\u00eaineres</li> <li>Falco: Detec\u00e7\u00e3o de comportamento an\u00f4malo em runtime</li> </ul>"},{"location":"advanced/security/#integracao-com-cicd","title":"Integra\u00e7\u00e3o com CI/CD","text":"<p>Integre escaneamento de seguran\u00e7a em seu pipeline de CI/CD:</p> <pre><code># Exemplo de passo em um pipeline CI\nscan_image() {\n  podman pull ${IMAGE}\n  trivy image --severity HIGH,CRITICAL ${IMAGE}\n  if [ $? -ne 0 ]; then\n    echo \"Falha: vulnerabilidades de alta severidade detectadas\"\n    exit 1\n  fi\n}\n</code></pre>"},{"location":"advanced/security/#rootless-containers","title":"Rootless Containers","text":"<pre><code># Executar como usu\u00e1rio n\u00e3o-root\npodman run --user 1000:1000 nginx\n\n# Verificar contexto de seguran\u00e7a\npodman run --security-opt label=level:s0:c100,c200 fedora\n</code></pre>"},{"location":"advanced/security/#selinux-e-apparmor_1","title":"SELinux e Apparmor","text":"<pre><code># Executar com perfil SELinux espec\u00edfico\npodman run --security-opt label=type:container_t nginx\n\n# Usar perfil Apparmor\npodman run --security-opt apparmor=custom-profile nginx\n</code></pre>"},{"location":"advanced/security/#capabilities","title":"Capabilities","text":"<pre><code># Remover capabilities espec\u00edficas\npodman run --cap-drop NET_ADMIN nginx\n\n# Adicionar capabilities\npodman run --cap-add SYS_PTRACE nginx\n</code></pre>"},{"location":"advanced/security/#boas-praticas","title":"Boas Pr\u00e1ticas","text":"<ol> <li>Use rootless containers sempre que poss\u00edvel</li> <li>Limite capabilities ao m\u00ednimo necess\u00e1rio</li> <li>Implemente pol\u00edticas de SELinux/AppArmor</li> <li>Atualize imagens regularmente</li> <li>Escaneie vulnerabilidades:</li> </ol> <pre><code>podman image scan nginx:latest\n</code></pre>"},{"location":"advanced/troubleshooting/","title":"Resolu\u00e7\u00e3o de Problemas","text":""},{"location":"advanced/troubleshooting/#problemas-comuns","title":"Problemas Comuns","text":""},{"location":"advanced/troubleshooting/#problemas-de-rede","title":"Problemas de Rede","text":"<pre><code># Verificar configura\u00e7\u00e3o de rede\npodman network inspect bridge\n\n# Limpar configura\u00e7\u00f5es de rede\npodman network prune\n</code></pre>"},{"location":"advanced/troubleshooting/#problemas-de-armazenamento","title":"Problemas de Armazenamento","text":"<pre><code># Verificar espa\u00e7o em uso\npodman system df\n\n# Limpar recursos n\u00e3o utilizados\npodman system prune -a\n</code></pre>"},{"location":"advanced/troubleshooting/#problemas-de-permissao","title":"Problemas de Permiss\u00e3o","text":"<pre><code># Verificar contexto do usu\u00e1rio\npodman system info\n\n# Resetar configura\u00e7\u00f5es de namespace\npodman unshare cat /proc/self/uid_map\n</code></pre>"},{"location":"advanced/troubleshooting/#logs-e-diagnostico","title":"Logs e Diagn\u00f3stico","text":"<pre><code># Visualizar logs do container\npodman logs container_name\n\n# Inspecionar detalhes do container\npodman inspect container_name\n\n# Debug em tempo real\npodman stats container_name\n</code></pre>"},{"location":"advanced/troubleshooting/#solucoes-comuns","title":"Solu\u00e7\u00f5es Comuns","text":"<ol> <li>Reiniciar o container</li> <li>Verificar logs do sistema</li> <li>Validar configura\u00e7\u00f5es de rede</li> <li>Checar permiss\u00f5es de arquivo</li> <li>Verificar recursos dispon\u00edveis</li> <li>Atualizar Podman para a vers\u00e3o mais recente</li> <li>Consultar a documenta\u00e7\u00e3o oficial</li> <li>Buscar ajuda na comunidade Podman</li> <li>Reportar bugs no reposit\u00f3rio oficial</li> <li>Revisar configura\u00e7\u00f5es de seguran\u00e7a</li> <li>Testar em um ambiente diferente</li> <li>Validar depend\u00eancias do sistema</li> <li>Verificar conflitos de porta</li> <li>Limpar caches e dados tempor\u00e1rios</li> <li>Reiniciar o daemon do Podman</li> <li>Verificar integridade do sistema de arquivos</li> <li>Consultar f\u00f3runs e grupos de discuss\u00e3o (Stack Overflow, Reddit etc.)</li> <li>Revisar scripts de automa\u00e7\u00e3o</li> <li>Validar vari\u00e1veis de ambiente</li> </ol> <pre><code>## Recursos Adicionais\n- [Documenta\u00e7\u00e3o Oficial do Podman](https://podman.io/docs/)\n- [F\u00f3rum da Comunidade Podman](https://podman.io/community/)\n- [Canal do Podman no Slack](https://podman.io/community/slack/)\n- [Reposit\u00f3rio do Podman no GitHub](https://github.com/containers/podman)\n- [Artigos e Tutoriais sobre Podman](https://podman.io/blog/)\n</code></pre>"},{"location":"fundamentals/containers/","title":"Gerenciamento de Containers","text":""},{"location":"fundamentals/containers/#ciclo-de-vida","title":"Ciclo de Vida","text":"<pre><code># Criar e iniciar\npodman run -d --name web nginx\n\n# Parar container\npodman stop web\n\n# Iniciar container existente\npodman start web\n\n# Remover container\npodman rm web\n</code></pre>"},{"location":"fundamentals/containers/#operacoes-basicas","title":"Opera\u00e7\u00f5es B\u00e1sicas","text":"<pre><code># Executar comando em container\npodman exec web ls /app\n\n# Copiar arquivos\npodman cp ./local/file.txt web:/app/\n\n# Ver logs\npodman logs web\n\n# Inspecionar container\npodman inspect web\n</code></pre>"},{"location":"fundamentals/containers/#recursos-e-limites","title":"Recursos e Limites","text":"<pre><code># Limitar CPU e mem\u00f3ria\npodman run -d \\\n    --cpus=1.5 \\\n    --memory=512m \\\n    --name app \\\n    nginx\n\n# Monitorar uso\npodman stats app\n</code></pre>"},{"location":"fundamentals/containers/#melhores-praticas","title":"Melhores Pr\u00e1ticas","text":"<ol> <li>Use nomes descritivos</li> <li>Defina limites de recursos</li> <li>Monitore o desempenho</li> <li>Mantenha backups</li> <li>Use healthchecks:</li> </ol> <pre><code>podman run --health-cmd=\"curl -f http://localhost\" nginx\n</code></pre>"},{"location":"fundamentals/getting-started/","title":"Primeiros Passos","text":""},{"location":"fundamentals/getting-started/#execucao-de-um-container","title":"Execu\u00e7\u00e3o de um Container","text":""},{"location":"fundamentals/getting-started/#container-basico","title":"Container b\u00e1sico","text":"<pre><code># Baixar imagem\npodman pull docker.io/nginx:latest\n\n# Executar container em background\npodman run -d --name meu-nginx -p 8080:80 nginx:latest\n\n# Verificar container em execu\u00e7\u00e3o\npodman ps\n\n# Acessar o site no navegador ou curl\ncurl http://localhost:8080\n</code></pre> <p>Explica\u00e7\u00e3o de par\u00e2metros:</p> <ul> <li><code>-d</code>: Executa em modo \"detached\" (background)</li> <li><code>--name meu-nginx</code>: Atribui um nome amig\u00e1vel ao container</li> <li><code>-p 8080:80</code>: Mapeia a porta 8080 do host para a porta 80 do container</li> </ul> <p>Sa\u00edda esperada do comando <code>podman ps</code>:</p> <pre><code>CONTAINER ID  IMAGE                           COMMAND               CREATED         STATUS             PORTS                 NAMES\n3f4a8d0e15c3  docker.io/library/nginx:latest  nginx -g daemon o...  10 seconds ago  Up 9 seconds ago   0.0.0.0:8080-&gt;80/tcp  meu-nginx\n</code></pre>"},{"location":"fundamentals/getting-started/#container-interativo","title":"Container interativo","text":"<pre><code># Executar um container interativo\npodman run -it --rm ubuntu:latest bash\n\n# Dentro do container, voc\u00ea pode executar comandos como:\napt update\necho \"Estou dentro do container!\"\nexit\n</code></pre> <p>Explica\u00e7\u00e3o de par\u00e2metros:</p> <ul> <li><code>-it</code>: Combina\u00e7\u00e3o de <code>-i</code> (interativo) e <code>-t</code> (aloca TTY)</li> <li><code>--rm</code>: Remove automaticamente o container ap\u00f3s a sa\u00edda</li> <li><code>bash</code>: Comando a executar no container</li> </ul>"},{"location":"fundamentals/getting-started/#operacoes-com-containers","title":"Opera\u00e7\u00f5es com containers","text":"<pre><code># Parar o container\npodman stop meu-nginx\n\n# Iniciar o container novamente\npodman start meu-nginx\n\n# Executar comando em container em execu\u00e7\u00e3o\npodman exec -it meu-nginx /bin/bash\n\n# Ver logs do container\npodman logs meu-nginx\n\n# Remover container\npodman rm -f meu-nginx\n</code></pre>"},{"location":"fundamentals/getting-started/#recursos-avancados-do-podman","title":"Recursos Avan\u00e7ados do Podman","text":""},{"location":"fundamentals/getting-started/#criando-e-gerenciando-pods","title":"Criando e gerenciando pods","text":"<pre><code># Criar um pod com publica\u00e7\u00e3o de portas\npodman pod create --name webapp-pod -p 8080:80\n\n# Adicionar containers ao pod\npodman run -d --pod webapp-pod --name web-front nginx:latest\npodman run -d --pod webapp-pod --name api-backend httpd:latest\n\n# Listar pods\npodman pod ps\n\n# Inspecionar um pod\npodman pod inspect webapp-pod\n\n# Parar o pod (para todos os containers)\npodman pod stop webapp-pod\n\n# Iniciar o pod (inicia todos os containers)\npodman pod start webapp-pod\n\n# Remover o pod e seus containers\npodman pod rm -f webapp-pod\n</code></pre>"},{"location":"fundamentals/getting-started/#container-rootless","title":"Container rootless","text":"<pre><code># Verificar seu usu\u00e1rio atual\nid\n\n# Executar container sem privil\u00e9gios root\npodman run --rm -it --name rootless-test alpine:latest sh\n\n# Dentro do container, verificar o usu\u00e1rio\nid\n\n# Tentar opera\u00e7\u00f5es privilegiadas (devem falhar)\napk add --no-cache tcpdump\ntcpdump -i eth0\n</code></pre>"},{"location":"fundamentals/getting-started/#integracao-com-systemd","title":"Integra\u00e7\u00e3o com systemd","text":"<pre><code># Gerar arquivo de unidade systemd para o container\nmkdir -p ~/.config/systemd/user/\npodman run -d --name web-service -p 8080:80 nginx:latest\npodman generate systemd --name web-service --files --new\n\n# Habilitar o servi\u00e7o\nsystemctl --user daemon-reload\nsystemctl --user enable container-web-service.service\nsystemctl --user start container-web-service.service\n\n# Verificar status\nsystemctl --user status container-web-service.service\n\n# Parar o servi\u00e7o\nsystemctl --user stop container-web-service.service\n</code></pre>"},{"location":"fundamentals/getting-started/#construindo-imagens-com-podman","title":"Construindo imagens com Podman","text":"<pre><code># Criar arquivo Dockerfile\n\nmkdir podman-build &amp;&amp; cd podman-build\n</code></pre> <pre><code># Dockerfile\n\nFROM ubuntu:latest\nRUN apt-get update &amp;&amp; apt-get install -y nginx\nEXPOSE 80\nCMD [\"nginx\", \"-g\", \"daemon off;\"]\n</code></pre> <pre><code># Construir imagem\npodman build -t minha-imagem:latest .\n\n# Listar imagens\npodman images\n\n# Executar container com a imagem criada\npodman run -d --name meu-app -p 8080:80 minha-imagem:latest\n</code></pre>"},{"location":"fundamentals/getting-started/#comparacao-com-docker-pratica","title":"Compara\u00e7\u00e3o com Docker (pr\u00e1tica)","text":""},{"location":"fundamentals/getting-started/#comparacao-de-comandos","title":"Compara\u00e7\u00e3o de comandos","text":"Opera\u00e7\u00e3o Docker Podman Observa\u00e7\u00f5es Executar container <code>docker run</code> <code>podman run</code> Sintaxe id\u00eantica Listar containers <code>docker ps</code> <code>podman ps</code> Sa\u00edda similar Listar imagens <code>docker images</code> <code>podman images</code> Sintaxe e sa\u00edda similares Construir imagem <code>docker build</code> <code>podman build</code> Suporta mesmo Dockerfile Remover containers <code>docker rm</code> <code>podman rm</code> Sintaxe id\u00eantica Usar compose <code>docker-compose</code> <code>podman-compose</code> Requer instala\u00e7\u00e3o separada"},{"location":"fundamentals/getting-started/#exemplo-de-alias-para-migracao-de-docker-para-podman","title":"Exemplo de alias para migra\u00e7\u00e3o de Docker para Podman","text":"<pre><code># Adicionar ao ~/.bashrc ou ~/.zshrc\nalias docker=podman\n\n# Testar alias\nsource ~/.bashrc\ndocker ps  # Na realidade executa podman ps\n</code></pre> <p>Diferen\u00e7as importantes observadas</p> <ol> <li> <p>Container sem privil\u00e9gios root</p> <p>Com Docker:</p> <pre><code>docker run -it --rm alpine id\n# uid=0(root) gid=0(root) groups=0(root),...\n</code></pre> <p>Com Podman:</p> <pre><code>podman unshare cat /proc/self/uid_map\n# Verificar mapeamento de UIDs\npodman run -it --rm alpine id\n# uid=0(root) gid=0(root) groups=0(root),...\n# Por\u00e9m, este \"root\" \u00e9 mapeado para seu usu\u00e1rio real no host\n</code></pre> </li> <li> <p>Comunica\u00e7\u00e3o direta entre containeres no mesmo pod</p> <p>Com Docker:</p> <pre><code># Requer rede customizada ou link\ndocker network create mynet\ndocker run -d --name db --network mynet postgres\ndocker run -d --name app --network mynet -p 8080:80 myapp\n# App se conecta usando nome do container como hostname\n</code></pre> <p>Com Podman:</p> <pre><code># Usando pods nativos\npodman pod create --name myapp-pod -p 8080:80\npodman run -d --pod myapp-pod --name db postgres\npodman run -d --pod myapp-pod --name app myapp\n# App pode se conectar ao banco usando localhost\n</code></pre> </li> <li> <p>Limita\u00e7\u00e3o: Podman-compose ainda em desenvolvimento</p> <p>O Docker Compose possui mais funcionalidades que o Podman Compose, que est\u00e1 em est\u00e1gio inicial de desenvolvimento. Para aplica\u00e7\u00f5es complexas que dependem de Docker Compose, pode ser necess\u00e1rio ajustar os arquivos ou usar pods.    </p> </li> </ol>"},{"location":"fundamentals/getting-started/#laboratorio-aplicado-aplicacao-web-multi-container","title":"Laborat\u00f3rio Aplicado: Aplica\u00e7\u00e3o Web Multi-container","text":"<p>Neste exemplo pr\u00e1tico, implementaremos uma aplica\u00e7\u00e3o web com frontend, backend e banco de dados usando pods do Podman.</p>"},{"location":"fundamentals/getting-started/#1-criar-pod-para-a-aplicacao","title":"1. Criar pod para a aplica\u00e7\u00e3o","text":"<pre><code>podman pod create --name webapp \\\n--publish 8080:80 \\\n--publish 5000:5000 \\\n--publish 5432:5432\n</code></pre>"},{"location":"fundamentals/getting-started/#2-adicionar-banco-de-dados-postgresql","title":"2. Adicionar banco de dados PostgreSQL","text":"<pre><code>podman run -d --pod webapp \\\n--name postgres \\\n-e POSTGRES_PASSWORD=senhasegura \\\n-e POSTGRES_USER=appuser \\\n-e POSTGRES_DB=webapp \\\n-v postgres-data:/var/lib/postgresql/data \\\npostgres:16.3-alpine3.20\n</code></pre>"},{"location":"fundamentals/getting-started/#3-adicionar-api-backend","title":"3. Adicionar API backend","text":"<pre><code># Criar Dockerfile para backend\n\nmkdir -p backend &amp;&amp; cd backend\n</code></pre> <pre><code># Dockerfile\n\nFROM python:3.9-slim\nWORKDIR /app\nCOPY requirements.txt .\nRUN pip install -r requirements.txt\nCOPY . .\nCMD [\"python\", \"app.py\"]\n</code></pre> <pre><code># requirements.txt\n\nflask\npsycopg2-binary\nflask-cors\n</code></pre> <pre><code># app.py\n\nfrom flask import Flask, jsonify\nfrom flask_cors import CORS\nimport os\n\napp = Flask(__name__)\nCORS(app)\n\n@app.route('/api/info')\ndef info():\n    return jsonify({\"status\": \"ok\", \"message\": \"API running with Podman!\"})\n\nif __name__ == '__main__':\n    app.run(host='0.0.0.0', port=5000)\n</code></pre> <pre><code># Construir e executar backend\n\npodman build -t webapp-backend .\npodman run -d --pod webapp --name backend webapp-backend\ncd ..\n</code></pre>"},{"location":"fundamentals/getting-started/#4-adicionar-frontend","title":"4. Adicionar frontend","text":"<pre><code># Criar Dockerfile para frontend\n\nmkdir -p frontend &amp;&amp; cd frontend\n</code></pre> <pre><code># Dockerfile\n\nFROM nginx:alpine\nCOPY index.html /usr/share/nginx/html/index.html\nCOPY style.css /usr/share/nginx/html/style.css\nCOPY script.js /usr/share/nginx/html/script.js\n</code></pre> <pre><code>&lt;!-- index.html --&gt;\n\n&lt;!DOCTYPE html&gt;\n&lt;html lang=\"en\"&gt;\n&lt;head&gt;\n    &lt;meta charset=\"UTF-8\"&gt;\n    &lt;title&gt;Podman App Demo&lt;/title&gt;\n    &lt;link rel=\"stylesheet\" href=\"style.css\"&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;div class=\"container\"&gt;\n        &lt;h1&gt;Podman Multi-Container App&lt;/h1&gt;\n        &lt;div id=\"status\"&gt;Checking API status...&lt;/div&gt;\n        &lt;button id=\"checkButton\"&gt;Check API Status&lt;/button&gt;\n    &lt;/div&gt;\n    &lt;script src=\"script.js\"&gt;&lt;/script&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre> <pre><code>/* style.css */\n\nbody {\n    font-family: Arial, sans-serif;\n    margin: 0;\n    padding: 0;\n    background-color: #f4f4f4;\n}\n.container {\n    max-width: 800px;\n    margin: 50px auto;\n    padding: 20px;\n    background-color: white;\n    border-radius: 8px;\n    box-shadow: 0 2px 4px rgba(0,0,0,0.1);\n    text-align: center;\n}\nbutton {\n    padding: 10px 20px;\n    background-color: #4CAF50;\n    color: white;\n    border: none;\n    border-radius: 4px;\n    cursor: pointer;\n    margin-top: 20px;\n}\n#status {\n    margin: 20px 0;\n    padding: 10px;\n    background-color: #f8f8f8;\n    border-radius: 4px;\n}\n</code></pre> <pre><code>// script.js\n\ndocument.addEventListener('DOMContentLoaded', function() {\n    const statusDiv = document.getElementById('status');\n    const checkButton = document.getElementById('checkButton');\n\n    function checkAPI() {\n        statusDiv.textContent = 'Connecting to API...';\n        fetch('http://localhost:5000/api/info')\n            .then(response =&gt; response.json())\n            .then(data =&gt; {\n                statusDiv.textContent = 'API Status: ' + data.message;\n                statusDiv.style.backgroundColor = '#dff0d8';\n            })\n            .catch(error =&gt; {\n                statusDiv.textContent = 'Error connecting to API';\n                statusDiv.style.backgroundColor = '#f2dede';\n                console.error('Error:', error);\n            });\n    }\n\n    checkButton.addEventListener('click', checkAPI);\n\n    // Initial check\n    checkAPI();\n});\n</code></pre> <pre><code># Construir e executar frontend\n\npodman build -t webapp-frontend .\npodman run -d --pod webapp --name frontend webapp-frontend\ncd ..\n</code></pre>"},{"location":"fundamentals/getting-started/#5-verificar-e-testar-a-aplicacao","title":"5. Verificar e testar a aplica\u00e7\u00e3o","text":"<pre><code># Listar componentes em execu\u00e7\u00e3o\npodman pod ps\npodman ps --pod webapp\n\n# Verificar logs\npodman logs backend\npodman logs frontend\n\n# Testar acesso \u00e0 aplica\u00e7\u00e3o\necho \"Acesse em seu navegador: http://localhost:8080\"\ncurl http://localhost:5000/api/info\n</code></pre>"},{"location":"fundamentals/getting-started/#conclusao","title":"Conclus\u00e3o","text":""},{"location":"fundamentals/getting-started/#o-que-aprendemos-com-o-laboratorio","title":"O que aprendemos com o laborat\u00f3rio","text":"<p>Atrav\u00e9s deste laborat\u00f3rio pr\u00e1tico, exploramos o Podman como uma alternativa vi\u00e1vel e segura ao Docker. Aprendemos que:</p> <ol> <li> <p>O Podman oferece uma experi\u00eancia de usu\u00e1rio semelhante ao Docker, com comandos familiares e sintaxe compat\u00edvel, facilitando a migra\u00e7\u00e3o.</p> </li> <li> <p>A arquitetura sem daemon do Podman elimina o ponto \u00fanico de falha presente no Docker e permite opera\u00e7\u00f5es sem privil\u00e9gios de root, aumentando significativamente a seguran\u00e7a.</p> </li> <li> <p>O conceito de pods nativos no Podman facilita a organiza\u00e7\u00e3o de aplica\u00e7\u00f5es multi-container e a transi\u00e7\u00e3o para ambientes Kubernetes.</p> </li> <li> <p>A integra\u00e7\u00e3o com systemd permite gerenciar cont\u00eaineres como servi\u00e7os do sistema, aproveitando recursos como reinicializa\u00e7\u00e3o autom\u00e1tica e depend\u00eancias.</p> </li> <li> <p>Em termos de funcionalidade para desenvolvimento local e ambientes de produ\u00e7\u00e3o, o Podman oferece todas as capacidades essenciais do Docker com modelo de seguran\u00e7a aprimorado.</p> </li> </ol> <p>Sugest\u00f5es de uso futuro</p>"},{"location":"fundamentals/getting-started/#ambientes-corporativos-com-requisitos-de-seguranca-elevados","title":"Ambientes corporativos com requisitos de seguran\u00e7a elevados","text":"<p>O Podman \u00e9 ideal para empresas que precisam aderir a pol\u00edticas de seguran\u00e7a estritas, onde a execu\u00e7\u00e3o de servi\u00e7os com privil\u00e9gios elevados (como o daemon do Docker) \u00e9 restrita ou indesejada.</p>"},{"location":"fundamentals/getting-started/#desenvolvimento-para-kubernetes","title":"Desenvolvimento para Kubernetes","text":"<p>Para equipes que desenvolvem aplica\u00e7\u00f5es destinadas a serem executadas em Kubernetes, o Podman oferece uma transi\u00e7\u00e3o mais natural atrav\u00e9s do conceito de pods nativos, permitindo testar localmente configura\u00e7\u00f5es semelhantes \u00e0s do ambiente de produ\u00e7\u00e3o.</p>"},{"location":"fundamentals/getting-started/#sistemas-de-cicd-seguros","title":"Sistemas de CI/CD seguros","text":"<p>Implementar Podman em pipelines de CI/CD permite construir e testar containers sem conceder privil\u00e9gios elevados aos workers, reduzindo os riscos de ataques ou vazamentos.</p>"},{"location":"fundamentals/getting-started/#ambientes-multi-tenant","title":"Ambientes multi-tenant","text":"<p>Em servidores compartilhados onde m\u00faltiplos usu\u00e1rios precisam criar e gerenciar seus pr\u00f3prios containers, o Podman permite isolamento completo sem necessidade de acesso root.</p>"},{"location":"fundamentals/getting-started/#integracao-com-ferramentas-de-automacao","title":"Integra\u00e7\u00e3o com ferramentas de automa\u00e7\u00e3o","text":"<p>O Podman se integra perfeitamente com Ansible, Terraform e outras ferramentas de IaC, permitindo automa\u00e7\u00e3o completa do ciclo de vida dos containers em ambientes seguros</p> <p>Para futuros experimentos, sugerimos explorar:</p> <ol> <li>Configura\u00e7\u00f5es avan\u00e7adas de rede com CNI plugins</li> <li>Implementa\u00e7\u00e3o de pol\u00edticas de seguran\u00e7a com SELinux e seccomp</li> <li>Quadra-pod: combina\u00e7\u00e3o de Podman com Buildah, Skopeo e CRI-O para um pipeline completo de containers</li> <li>Configura\u00e7\u00e3o de registro local para imagens com autentica\u00e7\u00e3o</li> <li>Implementa\u00e7\u00e3o de health checks e auto-recupera\u00e7\u00e3o de containers com systemd</li> </ol> <p>O Podman representa uma evolu\u00e7\u00e3o importante na tecnologia de containers, comprovando que \u00e9 poss\u00edvel obter toda a conveni\u00eancia e poder dos containers sem comprometer a seguran\u00e7a e a estabilidade do sistema</p>"},{"location":"fundamentals/images/","title":"Trabalhando com Imagens","text":""},{"location":"fundamentals/images/#gerenciamento-de-imagens","title":"Gerenciamento de Imagens","text":""},{"location":"fundamentals/images/#buscar-imagens","title":"Buscar Imagens","text":"<pre><code>podman search nginx\npodman pull nginx:latest\n</code></pre>"},{"location":"fundamentals/images/#listar-e-inspecionar","title":"Listar e Inspecionar","text":"<pre><code>podman images\npodman image inspect nginx\n</code></pre>"},{"location":"fundamentals/images/#construir-imagens","title":"Construir Imagens","text":"<pre><code>podman build -t minha-app:1.0 .\n</code></pre>"},{"location":"fundamentals/images/#dockerfile-com-podman","title":"Dockerfile com Podman","text":"<p>O Podman \u00e9 compat\u00edvel com Dockerfiles. Exemplo:</p> <pre><code>FROM ubuntu:20.04\nWORKDIR /app\nCOPY . .\nRUN apt-get update &amp;&amp; apt-get install -y python3\nCMD [\"python3\", \"app.py\"]\n</code></pre>"},{"location":"fundamentals/images/#boas-praticas","title":"Boas Pr\u00e1ticas","text":"<ol> <li>Use multi-stage builds para imagens menores</li> <li>Minimize o n\u00famero de camadas</li> <li>Use tags espec\u00edficas</li> <li>Remova imagens n\u00e3o utilizadas:</li> </ol> <pre><code>podman image prune\n</code></pre>"},{"location":"installation/overview/","title":"Vis\u00e3o Geral da Instala\u00e7\u00e3o","text":"<p>O Podman est\u00e1 dispon\u00edvel para v\u00e1rias distribui\u00e7\u00f5es Linux e MacOS. A instala\u00e7\u00e3o varia dependendo do seu sistema operacional.</p>"},{"location":"installation/overview/#sistemas-suportados","title":"Sistemas Suportados","text":"<ul> <li>Fedora</li> <li>Red Hat Enterprise Linux</li> <li>CentOS</li> <li>Ubuntu</li> <li>Debian</li> <li>MacOS (via m\u00e1quina virtual)</li> </ul>"},{"location":"installation/overview/#requisitos-do-sistema","title":"Requisitos do Sistema","text":"<ul> <li>Linux kernel 3.8 ou superior</li> <li>systemd (recomendado)</li> <li>cgroups v2 (para melhor funcionalidade)</li> <li>Armazenamento suficiente para imagens e containers</li> </ul>"},{"location":"installation/overview/#instalacao","title":"Instala\u00e7\u00e3o","text":"Fedora/Red Hat/CentOSUbuntu/DebianArch LinuxmacOS (via Podman Machine)Windows (via WSL2) <pre><code># Instalar o Podman\nsudo dnf install podman -y\n\n# Verificar instala\u00e7\u00e3o\npodman --version\n</code></pre> <pre><code># Atualizar \u00edndices de pacotes\nsudo apt update\n\n# Instalar Podman\nsudo apt install podman -y\n\n# Verificar instala\u00e7\u00e3o\npodman --version\n</code></pre> <pre><code>sudo pacman -S podman\n\n# Verificar instala\u00e7\u00e3o\npodman --version\n</code></pre> <pre><code># Usando Homebrew\nbrew install podman\n\n# Inicializar m\u00e1quina virtual do Podman\npodman machine init\npodman machine start\n\n# Verificar status\npodman machine list\n</code></pre> <ol> <li>Instalar WSL2 com distribui\u00e7\u00e3o Linux compat\u00edvel</li> <li>Na distribui\u00e7\u00e3o Linux, instalar Podman conforme instru\u00e7\u00f5es acima</li> <li>Configurar namespaces de usu\u00e1rio se necess\u00e1rio:</li> </ol> <pre><code>sudo echo 'kernel.unprivileged_userns_clone=1' &gt;&gt; /etc/sysctl.d/00-local-userns.conf\nsudo systemctl restart systemd-sysctl\n</code></pre>"},{"location":"networking/network/","title":"Gerenciando redes de Containers","text":""},{"location":"networking/network/#1-listando-as-redes-de-um-container","title":"1. Listando as redes de um container","text":"<p>No Podman, existem dois comportamentos de rede:</p> <ul> <li>Rootless networking: a rede \u00e9 configurada automaticamente, o cont\u00eainer n\u00e3o possui um endere\u00e7o IP.</li> <li>Rootful networking: o cont\u00eainer possui um endere\u00e7o IP.</li> </ul> <p>Pr\u00e9-requisitos: O meta-pacote <code>container-tools</code> est\u00e1 instalado.</p> <ul> <li>Liste todas as redes como usu\u00e1rio root:</li> </ul> <pre><code>podman network ls\n\nNETWORK ID    NAME        VERSION     PLUGINS\n2f259bab93aa  podman      0.4.0       bridge,portmap,firewall,tuning\n</code></pre> <p>Por padr\u00e3o, o Podman fornece uma rede em ponte. A lista de redes para um usu\u00e1rio sem privil\u00e9gios (<code>rootless</code>) \u00e9 a mesma que para um usu\u00e1rio com privil\u00e9gios (<code>rootful</code>).</p>"},{"location":"networking/network/#2-inspecionando-uma-rede","title":"2. Inspecionando uma rede","text":"<p>Exibe o intervalo de IP, plugins habilitados, tipo de rede, etc., para uma rede especificada listada pelo comando <code>podman network ls</code>.</p> <p>Pr\u00e9-requisitos: O meta-pacote <code>container-tools</code> est\u00e1 instalado.</p> <ul> <li>Inspecione a rede padr\u00e3o do Podman:</li> </ul> <pre><code>podman network inspect podman\n\n[\n    {\n        \"cniVersion\": \"0.4.0\",\n        \"name\": \"podman\",\n        \"plugins\": [\n            {\n                \"bridge\": \"cni-podman0\",\n                \"hairpinMode\": true,\n                \"ipMasq\": true,\n                \"ipam\": {\n                    \"ranges\": [\n                        [\n                            {\n                                \"gateway\": \"10.88.0.1\",\n                                \"subnet\": \"10.88.0.0/16\"\n                            }\n                        ]\n                    ],\n                    \"routes\": [\n                        {\n                            \"dst\": \"0.0.0.0/0\"\n                        }\n                    ],\n                    \"type\": \"host-local\"\n                },\n                \"isGateway\": true,\n                \"type\": \"bridge\"\n            },\n            {\n                \"capabilities\": {\n                    \"portMappings\": true\n                },\n                \"type\": \"portmap\"\n            },\n            {\n                \"type\": \"firewall\"\n            },\n            {\n                \"type\": \"tuning\"\n            }\n        ]\n    }\n]\n</code></pre> <p>Voc\u00ea pode ver o intervalo de IP, plugins habilitados, tipo de rede e outras configura\u00e7\u00f5es de rede.</p>"},{"location":"networking/network/#3-criando-uma-rede","title":"3. Criando uma rede","text":"<p>Use o comando <code>podman network create</code> para criar uma nova rede.</p> <p>Nota: Por padr\u00e3o, o Podman cria uma rede externa. Voc\u00ea pode criar uma rede interna usando o comando <code>podman network create --internal</code>. Cont\u00eaineres em uma rede interna podem se comunicar com outros cont\u00eaineres no host, mas n\u00e3o podem se conectar \u00e0 rede fora do host nem ser alcan\u00e7ados a partir dela.</p> <p>Pr\u00e9-requisitos: O meta-pacote <code>container-tools</code> est\u00e1 instalado.</p> <ul> <li>Crie a rede externa chamada <code>mynet</code>:</li> </ul> <pre><code>podman network create mynet\n\n/etc/cni/net.d/mynet.conflist\n</code></pre> <p>Verifica\u00e7\u00e3o: Liste todas as redes:</p> <pre><code>podman network ls\n\nNETWORK ID    NAME        VERSION     PLUGINS\n2f259bab93aa  podman      0.4.0       bridge,portmap,firewall,tuning\n11c844f95e28  mynet       0.4.0       bridge,portmap,firewall,tuning,dnsname\n</code></pre> <p>Voc\u00ea pode ver a rede <code>mynet</code> criada e a rede padr\u00e3o <code>podman</code>.</p> <p>Nota: A partir do Podman 4.0, o plugin DNS \u00e9 habilitado por padr\u00e3o se voc\u00ea criar uma nova rede externa usando o comando <code>podman network create</code>.</p>"},{"location":"networking/network/#4-conectando-um-container-a-rede","title":"4. Conectando um container \u00e0 rede","text":"<p>Use o comando <code>podman network connect</code> para conectar o cont\u00eainer \u00e0 rede.</p> <p>Pr\u00e9-requisitos:</p> <ul> <li>O meta-pacote <code>container-tools</code> est\u00e1 instalado.</li> <li>Uma rede foi criada usando o comando <code>podman network create</code>.</li> <li>Um cont\u00eainer foi criado.</li> </ul> <p>Procedimento:</p> <ul> <li>Conecte um cont\u00eainer chamado <code>mycontainer</code> a uma rede chamada <code>mynet</code>:</li> </ul> <pre><code>podman network connect mynet mycontainer\n\nmap[podman:0xc00042ab40 mynet:0xc00042ac60]\n</code></pre> <p>Verifica\u00e7\u00e3o: Verifique se o <code>mycontainer</code> est\u00e1 conectado \u00e0 rede <code>mynet</code>:</p> <pre><code>podman inspect --format='{{.NetworkSettings.Networks}}' mycontainer\n</code></pre> <p>Voc\u00ea pode ver que <code>mycontainer</code> est\u00e1 conectado \u00e0s redes <code>mynet</code> e <code>podman</code>.</p>"},{"location":"networking/network/#5-desconectando-um-container-da-rede","title":"5. Desconectando um container da rede","text":"<p>Use o comando <code>podman network disconnect</code> para desconectar o cont\u00eainer da rede.</p> <p>Pr\u00e9-requisitos:</p> <ul> <li>O meta-pacote <code>container-tools</code> est\u00e1 instalado.</li> <li>Uma rede foi criada usando o comando <code>podman network create</code>.</li> <li>Um cont\u00eainer est\u00e1 conectado a uma rede.</li> </ul> <p>Procedimento:</p> <ul> <li>Desconecte o cont\u00eainer chamado <code>mycontainer</code> da rede chamada <code>mynet</code>:</li> </ul> <pre><code>podman network disconnect mynet mycontainer\n</code></pre> <ul> <li>Verifique se o <code>mycontainer</code> est\u00e1 desconectado da rede <code>mynet</code>:</li> </ul> <pre><code>podman inspect --format='{{.NetworkSettings.Networks}}' mycontainer\n\nmap[podman:0xc000537440]\n</code></pre> <p>Voc\u00ea pode ver que <code>mycontainer</code> est\u00e1 desconectado da rede <code>mynet</code> e conectado apenas \u00e0 rede padr\u00e3o <code>podman</code>.</p>"},{"location":"networking/network/#6-removendo-uma-rede","title":"6. Removendo uma rede","text":"<p>Use o comando <code>podman network rm</code> para remover uma rede especificada.</p> <p>Pr\u00e9-requisitos: O meta-pacote <code>container-tools</code> est\u00e1 instalado.</p> <ol> <li>Liste todas as redes n\u00e3o utilizadas:</li> </ol> <pre><code>podman network prune\n\nNETWORK ID    NAME        VERSION     PLUGINS\n2f259bab93aa  podman      0.4.0       bridge,portmap,firewall,tuning\n11c844f95e28  mynet       0.4.0       bridge,portmap,firewall,tuning,dnsname\n</code></pre> <ol> <li>Remove the <code>mynet</code> network:</li> </ol> <pre><code>podman network rm mynet\n\nmynet\n</code></pre> <p>Observa\u00e7\u00e3o: Se a rede removida tiver cont\u00eaineres associados a ela, voc\u00ea precisar\u00e1 usar o <code>podman network rm -f</code> comando para excluir cont\u00eaineres e pods.</p> <p>Verifica\u00e7\u00e3o: Verifique se <code>mynet</code> rede foi removida:</p> <pre><code>podman rede ls\n\nID DA REDE NOME VERS\u00c3O PLUGINS\n2f259bab93aa podman 0.4.0 ponte, mapa de portas, firewall, ajuste\n</code></pre>"},{"location":"networking/network/#7-removendo-todas-as-redes-nao-utilizadas","title":"7. Removendo todas as redes n\u00e3o utilizadas","text":"<p>Use o comando <code>podman network prune</code> para remover todas as redes n\u00e3o utilizadas. Uma rede n\u00e3o utilizada \u00e9 uma rede sem cont\u00eaineres conectados a ela. O <code>podman network prune</code> comando n\u00e3o remove a <code>podman</code> rede padr\u00e3o.</p> <p>Pr\u00e9-requisitos: O meta-pacote <code>container-tools</code> est\u00e1 instalado.</p> <ul> <li>Remova todas as redes n\u00e3o utilizadas:</li> </ul> <pre><code>podman rede prune\n\nAVISO! Isso remover\u00e1 todas as redes n\u00e3o utilizadas por pelo menos um cont\u00eainer.\nTem certeza de que deseja continuar? [s/N] s\n</code></pre> <ul> <li>Verifique se todas as redes foram removidas:</li> </ul> <pre><code>podman rede ls\n\nID DA REDE NOME VERS\u00c3O PLUGINS\n2f259bab93aa podman 0.4.0 ponte, mapa de portas, firewall, ajuste\nmynet\n</code></pre>"},{"location":"networking/ports/","title":"Mapeamento de Portas","text":""},{"location":"networking/ports/#exposicao-de-portas","title":"Exposi\u00e7\u00e3o de Portas","text":"<pre><code># Mapear porta 80 do container para 8080 do host\npodman run -p 8080:80 nginx\n\n# Mapear m\u00faltiplas portas\npodman run -p 8080:80 -p 443:443 nginx\n\n# Mapear para interface espec\u00edfica\npodman run -p 127.0.0.1:8080:80 nginx\n</code></pre>"},{"location":"networking/ports/#publicacao-de-portas","title":"Publica\u00e7\u00e3o de Portas","text":"<p>No Dockerfile: <pre><code>EXPOSE 80\nEXPOSE 443\n</code></pre></p>"},{"location":"networking/ports/#verificacao-de-portas","title":"Verifica\u00e7\u00e3o de Portas","text":"<pre><code># Listar portas mapeadas\npodman port meu-container\n\n# Verificar conex\u00f5es\npodman top meu-container\n</code></pre>"},{"location":"networking/ports/#boas-praticas","title":"Boas Pr\u00e1ticas","text":"<ol> <li>Evite expor portas desnecess\u00e1rias</li> <li>Use portas n\u00e3o privilegiadas (&gt; 1024)</li> <li>Considere restri\u00e7\u00f5es de firewall</li> <li>Documente todas as portas utilizadas</li> </ol>"},{"location":"volumes/volumes/","title":"Volumes no Podman","text":"<p>Os volumes no Podman fornecem uma maneira de armazenar e acessar dados persistentes entre execu\u00e7\u00f5es de cont\u00eaineres, permitindo separar o ciclo de vida dos dados do ciclo de vida dos cont\u00eaineres.</p>"},{"location":"volumes/volumes/#conceitos-basicos-de-volumes","title":"Conceitos B\u00e1sicos de Volumes","text":""},{"location":"volumes/volumes/#o-que-sao-volumes","title":"O que s\u00e3o Volumes?","text":"<p>Volumes s\u00e3o mecanismos para persistir dados gerados e utilizados por cont\u00eaineres. Por padr\u00e3o, os cont\u00eaineres s\u00e3o ef\u00eameros - quando um cont\u00eainer \u00e9 removido, todos os dados dentro dele s\u00e3o perdidos. Os volumes resolvem este problema fornecendo armazenamento persistente.</p>"},{"location":"volumes/volumes/#por-que-usar-volumes","title":"Por que Usar Volumes?","text":"<ul> <li>Persist\u00eancia de dados: Os dados permanecem mesmo ap\u00f3s o cont\u00eainer ser removido</li> <li>Compartilhamento de dados: Facilita o compartilhamento entre cont\u00eaineres</li> <li>Desempenho: Geralmente oferecem melhor desempenho do que montagens bind</li> <li>Portabilidade: Funcionam de forma semelhante em diferentes sistemas operacionais</li> <li>Seguran\u00e7a: Oferecem mecanismos de isolamento mais seguros</li> </ul>"},{"location":"volumes/volumes/#tipos-de-armazenamento-no-podman","title":"Tipos de Armazenamento no Podman","text":"<p>O Podman suporta diferentes m\u00e9todos para persistir dados:</p>"},{"location":"volumes/volumes/#1-volumes-nomeados","title":"1. Volumes Nomeados","text":"<p>Volumes gerenciados pelo Podman, armazenados em um local espec\u00edfico do sistema de arquivos do host.</p> <pre><code>podman volume create meu-volume\npodman run -v meu-volume:/dados alpine sh\n</code></pre>"},{"location":"volumes/volumes/#2-montagens-bind-bind-mounts","title":"2. Montagens Bind (Bind Mounts)","text":"<p>Mapeiam diretamente um diret\u00f3rio ou arquivo do host para o cont\u00eainer.</p> <pre><code>podman run -v /caminho/no/host:/caminho/no/container:Z alpine sh\n</code></pre> <p>Nota: A flag <code>:Z</code> \u00e9 importante em sistemas com SELinux ativado, pois configura o contexto de seguran\u00e7a apropriado.</p>"},{"location":"volumes/volumes/#3-volumes-temporarios-tmpfs","title":"3. Volumes Tempor\u00e1rios (tmpfs)","text":"<p>Armazenamento em mem\u00f3ria, \u00fatil para dados tempor\u00e1rios que n\u00e3o precisam ser persistidos.</p> <pre><code>podman run --tmpfs /tmp:rw,size=100M alpine sh\n</code></pre>"},{"location":"volumes/volumes/#comandos-essenciais-para-gerenciar-volumes","title":"Comandos Essenciais para Gerenciar Volumes","text":""},{"location":"volumes/volumes/#criar-volumes","title":"Criar Volumes","text":"<pre><code># Criar um volume simples\npodman volume create meu-volume\n\n# Criar volume com op\u00e7\u00f5es espec\u00edficas\npodman volume create --driver local --opt type=btrfs --opt device=/dev/sda2 meu-volume-btrfs\n</code></pre>"},{"location":"volumes/volumes/#listar-volumes","title":"Listar Volumes","text":"<pre><code># Listar todos os volumes\npodman volume ls\n\n# Filtrar volumes\npodman volume ls --filter name=meu\n</code></pre>"},{"location":"volumes/volumes/#inspecionar-volumes","title":"Inspecionar Volumes","text":"<pre><code>podman volume inspect meu-volume\n</code></pre>"},{"location":"volumes/volumes/#remover-volumes","title":"Remover Volumes","text":"<pre><code># Remover um volume espec\u00edfico\npodman volume rm meu-volume\n\n# Remover volumes n\u00e3o utilizados\npodman volume prune\n</code></pre>"},{"location":"volumes/volumes/#usar-volumes-com-conteineres","title":"Usar Volumes com Cont\u00eaineres","text":"<pre><code># Executar cont\u00eainer com volume\npodman run -d --name mysql -v mysql-data:/var/lib/mysql mysql:8.0\n\n# Criar e montar volume em um \u00fanico comando\npodman run -d --name postgres -v postgres-data:/var/lib/postgresql/data postgres:14\n</code></pre>"},{"location":"volumes/volumes/#casos-de-uso-comuns","title":"Casos de Uso Comuns","text":""},{"location":"volumes/volumes/#bancos-de-dados","title":"Bancos de Dados","text":"<pre><code># MongoDB com persist\u00eancia de dados\npodman run -d --name mongodb \\\n  -v mongodb-data:/data/db \\\n  -p 27017:27017 \\\n  mongo:latest\n</code></pre>"},{"location":"volumes/volumes/#servidores-web","title":"Servidores Web","text":"<pre><code># Nginx servindo conte\u00fado est\u00e1tico\npodman run -d --name webserver \\\n  -v ./website:/usr/share/nginx/html:ro,Z \\\n  -p 8080:80 \\\n  nginx:alpine\n</code></pre>"},{"location":"volumes/volumes/#compartilhamento-entre-conteineres","title":"Compartilhamento entre Cont\u00eaineres","text":"<pre><code># Criar um volume compartilhado\npodman volume create dados-compartilhados\n\n# Cont\u00eainer 1 grava dados\npodman run -d --name produtor \\\n  -v dados-compartilhados:/shared \\\n  alpine sh -c \"echo 'Dados importantes' &gt; /shared/arquivo.txt &amp;&amp; tail -f /dev/null\"\n\n# Cont\u00eainer 2 l\u00ea dados\npodman run -it --rm \\\n  -v dados-compartilhados:/leitura:ro \\\n  alpine cat /leitura/arquivo.txt\n</code></pre>"},{"location":"volumes/volumes/#melhores-praticas","title":"Melhores Pr\u00e1ticas","text":""},{"location":"volumes/volumes/#nomeacao-de-volumes","title":"Nomea\u00e7\u00e3o de Volumes","text":"<p>Adote um padr\u00e3o de nomenclatura claro e consistente para seus volumes:</p> <pre><code># Padr\u00e3o sugerido: app-tipo-ambiente\npodman volume create webapp-mysql-prod\npodman volume create webapp-mysql-dev\n</code></pre>"},{"location":"volumes/volumes/#backup-e-restauracao","title":"Backup e Restaura\u00e7\u00e3o","text":"<p>Para fazer backup de dados em volumes:</p> <pre><code># Backup\npodman run --rm -v meu-volume:/origem -v $(pwd):/destino:Z alpine tar -czvf /destino/backup.tar.gz -C /origem .\n\n# Restaura\u00e7\u00e3o\npodman run --rm -v meu-volume:/destino -v $(pwd):/origem:Z alpine sh -c \"rm -rf /destino/* &amp;&amp; tar -xzvf /origem/backup.tar.gz -C /destino\"\n</code></pre>"},{"location":"volumes/volumes/#seguranca-e-permissoes","title":"Seguran\u00e7a e Permiss\u00f5es","text":"<p>Configurando permiss\u00f5es adequadas:</p> <pre><code># Definir propriedade (como UID 1000)\npodman run --rm -v meu-volume:/dados alpine chown -R 1000:1000 /dados\n\n# Definir permiss\u00f5es apenas leitura para o cont\u00eainer\npodman run -v meu-volume:/dados:ro alpine sh\n</code></pre>"},{"location":"volumes/volumes/#solucao-de-problemas","title":"Solu\u00e7\u00e3o de Problemas","text":""},{"location":"volumes/volumes/#problemas-de-permissao","title":"Problemas de Permiss\u00e3o","text":"<p>Se encontrar erros de permiss\u00e3o, verifique:</p> <ol> <li> <p>Contexto SELinux: Use <code>:Z</code> ou <code>:z</code> em sistemas com SELinux    <pre><code>podman run -v /host:/container:Z alpine sh\n</code></pre></p> </li> <li> <p>UID/GID: Compatibilize os IDs de usu\u00e1rio    <pre><code>podman run --user $(id -u):$(id -g) -v /host:/container alpine sh\n</code></pre></p> </li> </ol>"},{"location":"volumes/volumes/#volume-nao-aparece-na-listagem","title":"Volume n\u00e3o aparece na listagem","text":"<p>Verifique se est\u00e1 usando o mesmo contexto do Podman:</p> <pre><code># Para usu\u00e1rio root\nsudo podman volume ls\n\n# Para usu\u00e1rio comum\npodman volume ls\n</code></pre>"},{"location":"volumes/volumes/#conteineres-nao-conseguem-acessar-os-volumes","title":"Cont\u00eaineres n\u00e3o conseguem acessar os volumes","text":"<p>Verifique o contexto e namespace corretos:</p> <pre><code># Verificar onde o volume est\u00e1 armazenado\npodman volume inspect meu-volume\n\n# Verificar se o namespace do usu\u00e1rio est\u00e1 correto\npodman info | grep \"User namespace\"\n</code></pre>"},{"location":"volumes/volumes/#diferencas-entre-podman-e-docker-para-volumes","title":"Diferen\u00e7as entre Podman e Docker para Volumes","text":"<p>O Podman foi projetado para ser compat\u00edvel com o Docker, mas existem algumas diferen\u00e7as importantes:</p> <ol> <li>Arquitetura sem daemon: O Podman n\u00e3o depende de um processo daemon central</li> <li>Localiza\u00e7\u00e3o dos volumes: </li> <li>Docker: <code>/var/lib/docker/volumes/</code></li> <li>Podman (root): <code>/var/lib/containers/storage/volumes/</code></li> <li>Podman (rootless): <code>~/.local/share/containers/storage/volumes/</code></li> <li>Suporte a rootless: Podman tem melhor suporte para execu\u00e7\u00e3o sem privil\u00e9gios</li> </ol> <p>Para migrar volumes do Docker para o Podman:</p> <pre><code># Exportar volume do Docker\ndocker run --rm -v docker-volume:/from -v $(pwd):/to alpine cp -r /from/. /to/data\n\n# Importar volume para o Podman\npodman volume create podman-volume\npodman run --rm -v $(pwd)/data:/from -v podman-volume:/to alpine cp -r /from/. /to/\n</code></pre>"}]}